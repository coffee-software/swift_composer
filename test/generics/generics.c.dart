// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'generics.dart';

// **************************************************************************
// SwiftGenerator
// **************************************************************************

// **************************************************************************
// generated by swift_composer at 2024-06-28 14:21:08.831015
// ignore common warnings in generated code, you can also exclude this file in analysis_options.yaml
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: dead_null_aware_expression
// **************************************************************************
// CONFIG
// no config file for root: lib/swift_composer.di.yaml
// config file for module_test: test/lib/foo.di.yaml
// no config file for root: test/generics/generics.di.yaml
// **************************************************************************
// MERGED CONFIG
// module_test.Foo: {stringField: FooField, integerField: 124}
// module_test.FooChild: {stringField: FooChildField, doubleField: 0.55, booleanField: true}
// module_test.FooChild2: {stringField: FooChild2Field, doubleField: 0.55, booleanField: true}
// **************************************************************************
//register: SubtypeInfo
//register: SubtypesOf
//register: AnnotatedWith
//register: Pluggable
//register: TypePlugin
//register: module_test.Foo
//register: module_test.FooChild
//register: module_test.FooChild2
//register: Generic
//register: Generic2
//register: TypedGeneric2
// **************************************************************************
class $module_test_Foo extends module_test.Foo implements Pluggable {
  $module_test_Foo() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

  String get className => $om.s[0];
  String get stringField => "FooField";
  int get integerField => 124;
}

// **************************************************************************
class $module_test_FooChild extends module_test.FooChild implements Pluggable {
  $module_test_FooChild() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

  double get doubleField => 0.55;
  bool get booleanField => true;
  String get className => $om.s[1];
  String get stringField => "FooChildField";
  int get integerField => 124;
}

// **************************************************************************
class $module_test_FooChild2 extends module_test.FooChild2
    implements Pluggable {
  $module_test_FooChild2(requiredString) {
    this.requiredString = requiredString;
  }
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

  String get className => $om.s[2];
  String get stringField => "FooChild2Field";
  int get integerField => 124;
}

// **************************************************************************
class $TypedGeneric2 extends TypedGeneric2 implements Pluggable {
  $TypedGeneric2() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

  Map<String, module_test.FooChild> get instancesOfFoo =>
      $om.instancesOfmodule_test_FooChild;
//method factoryForFoo override
  module_test.FooChild factoryForFoo(String className) {
    return $om.createSubtypeOfmodule_test_FooChild1(className);
  }
}

// **************************************************************************
//parametrized type
class $Generic2_module_test_Foo_ extends Generic2<module_test.Foo>
    implements Pluggable {
  $Generic2_module_test_Foo_() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

  Map<String, module_test.FooChild> get instancesOfFoo =>
      $om.instancesOfmodule_test_FooChild;
//method factoryForFoo override
  module_test.FooChild factoryForFoo(String className) {
    return $om.createSubtypeOfmodule_test_FooChild1(className);
  }
}

// **************************************************************************
// **************************************************************************
// **************************************************************************
class $ObjectManager {
  $module_test_Foo? _module_test_Foo;
  $module_test_Foo get module_test_Foo {
    if (_module_test_Foo == null) {
      _module_test_Foo = new $module_test_Foo();
    }
    return _module_test_Foo as $module_test_Foo;
  }

  $module_test_FooChild? _module_test_FooChild;
  $module_test_FooChild get module_test_FooChild {
    if (_module_test_FooChild == null) {
      _module_test_FooChild = new $module_test_FooChild();
    }
    return _module_test_FooChild as $module_test_FooChild;
  }

  $TypedGeneric2? _typedGeneric2;
  $TypedGeneric2 get typedGeneric2 {
    if (_typedGeneric2 == null) {
      _typedGeneric2 = new $TypedGeneric2();
    }
    return _typedGeneric2 as $TypedGeneric2;
  }

  $Generic2_module_test_Foo_? _generic2_module_test_Foo_;
  $Generic2_module_test_Foo_ get generic2_module_test_Foo_ {
    if (_generic2_module_test_Foo_ == null) {
      _generic2_module_test_Foo_ = new $Generic2_module_test_Foo_();
    }
    return _generic2_module_test_Foo_ as $Generic2_module_test_Foo_;
  }

  Map<String, module_test.FooChild>? _instancesOfmodule_test_FooChild;
  Map<String, module_test.FooChild> get instancesOfmodule_test_FooChild {
    if (_instancesOfmodule_test_FooChild != null)
      return _instancesOfmodule_test_FooChild!;
    return _instancesOfmodule_test_FooChild = {
      $om.s[1]: module_test_FooChild,
    };
  }

  module_test.FooChild createSubtypeOfmodule_test_FooChild1(String className) {
    if (className == $om.s[1]) return new $module_test_FooChild();
    throw new Exception('no type for ' + className);
  }

  final List<String> s = const [
    "module_test.Foo",
    "module_test.FooChild",
    "module_test.FooChild2"
  ];
}

$ObjectManager $om = new $ObjectManager();
// generated in 6ms
