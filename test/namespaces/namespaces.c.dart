// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'namespaces.dart';

// **************************************************************************
// SwiftGenerator
// **************************************************************************

// **************************************************************************
// generated by swift_composer at 2022-02-13 19:54:03.487624
// config file for nested_module: /home/fsw/workspace/swift_composer/test/lib/nested.di.yaml
// config file for foo2_module: /home/fsw/workspace/swift_composer/test/lib/foo2.di.yaml
// config file for bar_module: /home/fsw/workspace/swift_composer/test/lib/bar.di.yaml
// **************************************************************************
// ALL TYPES INFO
// **************************************************************************
// SubtypesOf => SubtypesOf  GENERIC [T = T   342638001 = 342638001   342638001 = TypeParameterTypeImpl]
// AnnotatedWith => AnnotatedWith   [      ]
// Pluggable => Pluggable   [      ]
// TypePlugin => TypePlugin  GENERIC [T = T   290972494 = 290972494   290972494 = TypeParameterTypeImpl]
// nested_module.CombinedFoo => nested_module.CombinedFoo INTERCEPTED  [      ]
// nested_module.Foo => nested_module.Foo INTERCEPTED  [      ]
// nested_module.FooChild => nested_module.FooChild INTERCEPTED  [      ]
// nested_module.FooChild2 => nested_module.FooChild2 INTERCEPTED  [      ]
// foo2_module.Foo => foo2_module.Foo INTERCEPTED  [      ]
// bar_module.Bar => bar_module.Bar INTERCEPTED  [      ]
// bar_module.BarChild => bar_module.BarChild INTERCEPTED  [      ]
// generics_module.SimpleGeneric => generics_module.SimpleGeneric  GENERIC [T = T   77440244 = 77440244   77440244 = TypeParameterTypeImpl]
// generics_module.Param => generics_module.Param INTERCEPTED  [      ]
// generics_module.SimpleSpecific => generics_module.SimpleSpecific INTERCEPTED  [T = Param   77440244 = 69928645   77440244 = InterfaceTypeImpl]
// generics_module.ComplexGeneric => generics_module.ComplexGeneric  GENERIC [A = A,B = B   510373403 = 510373403,9288068 = 9288068   510373403 = TypeParameterTypeImpl,9288068 = TypeParameterTypeImpl]
// generics_module.SuperComplexGeneric => generics_module.SuperComplexGeneric  GENERIC [A = A,B = B   251358803 = 251358803,200962850 = 200962850   251358803 = TypeParameterTypeImpl,200962850 = TypeParameterTypeImpl]
// Foo => Foo   [      ]
// RootClass => RootClass   [      ]
// GenericRootClass => GenericRootClass  GENERIC [T = T   336000871 = 336000871   336000871 = TypeParameterTypeImpl]
// SpecificRootClass => SpecificRootClass   [T = Foo   336000871 = 251274722   336000871 = InterfaceTypeImpl]
// Object => Object   [      ]
// String => String   [T = String   127185517 = 259526404   127185517 = InterfaceTypeImpl]
// List<String> => List<String>   [T = E,E = String   186874632 = 66713824,66713824 = 259526404   186874632 = TypeParameterTypeImpl,66713824 = InterfaceTypeImpl]
// T => T   [      ]
// List<T> => List<T>   [T = E,E = T   186874632 = 66713824,66713824 = 342638001   186874632 = TypeParameterTypeImpl,66713824 = TypeParameterTypeImpl]
// dynamic => dynamic   [      ]
// ST => ST   [      ]
// int => int   [T = num   127185517 = 429855239   127185517 = InterfaceTypeImpl]
// double => double   [T = num   127185517 = 429855239   127185517 = InterfaceTypeImpl]
// bool => bool   [      ]
// String? => String?   [T = String   127185517 = 259526404   127185517 = InterfaceTypeImpl]
// void => void   [      ]
// generics_module.SimpleGeneric<generics_module.Param> => generics_module.SimpleGeneric<generics_module.Param> INTERCEPTED  [T = Param   77440244 = 69928645   77440244 = InterfaceTypeImpl]
// A => A   [      ]
// B => B   [      ]
// generics_module.ComplexGeneric<generics_module.Param,A> => generics_module.ComplexGeneric<generics_module.Param,A>   [A = Param,B = A   510373403 = 69928645,9288068 = 251358803   510373403 = InterfaceTypeImpl,9288068 = TypeParameterTypeImpl]
// generics_module.SimpleGeneric<Foo> => generics_module.SimpleGeneric<Foo> INTERCEPTED  [T = Foo   77440244 = 251274722   77440244 = InterfaceTypeImpl]
// generics_module.SimpleGeneric<T> => generics_module.SimpleGeneric<T>   [T = T   77440244 = 336000871   77440244 = TypeParameterTypeImpl]
// GenericRootClass<Foo> => GenericRootClass<Foo>   [T = Foo   336000871 = 251274722   336000871 = InterfaceTypeImpl]
// **************************************************************************
// no interceptor for [SubtypesOf]
// type arguments[1]:
// T[342638001] => T[342638001]
// type arguments[2]:
// can be singleton: FALSE
// parameter: T 342638001
// argument: T 342638001
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: SubtypesOf 1
// TYPE PATH:
//  SubtypesOf
// **************************************************************************
// no interceptor for [AnnotatedWith]
// type arguments[1]:
// type arguments[2]:
// can be singleton: FALSE
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: AnnotatedWith 1
// TYPE PATH:
//  AnnotatedWith
// **************************************************************************
// no interceptor for [Pluggable]
// type arguments[1]:
// type arguments[2]:
// can be singleton: FALSE
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: Pluggable 1
// TYPE PATH:
//  Pluggable
// **************************************************************************
// no interceptor for [TypePlugin]
// type arguments[1]:
// T[290972494] => T[290972494]
// type arguments[2]:
// can be singleton: FALSE
// parameter: T 290972494
// argument: T 290972494
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: TypePlugin 1
// TYPE PATH:
//  TypePlugin
// **************************************************************************
// interceptor for [nested_module.CombinedFoo]
// type arguments[1]:
// type arguments[2]:
// can be singleton: TRUE
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: nested_module.CombinedFoo 1
// TYPE PATH:
//  nested_module.CombinedFoo
class $nested_module_CombinedFoo extends nested_module.CombinedFoo
    implements Pluggable {
  $nested_module_CombinedFoo() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

// String className
// c: String
  String get className => "nested_module.CombinedFoo";
// nested_module.Foo inner_module_Foo1
// c: nested_module.Foo
// c: nested_module.FooChild
// c: nested_module.FooChild2
  nested_module.Foo get inner_module_Foo1 => $om.nested_module_Foo;
}

// **************************************************************************
// interceptor for [nested_module.Foo]
// type arguments[1]:
// type arguments[2]:
// can be singleton: TRUE
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Pluggable []
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: nested_module.Foo 1
// config: stringField NestedFooField
// config: integerField 124
// TYPE PATH:
//  nested_module.Foo
class $nested_module_Foo extends nested_module.Foo implements Pluggable {
  $nested_module_Foo() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

// String className
// c: String
  String get className => "nested_module.Foo";
// String stringField
// c: String
  String get stringField => "NestedFooField";
// int integerField
// c: int
  int get integerField => 124;
}

// **************************************************************************
// interceptor for [nested_module.FooChild]
// type arguments[1]:
// type arguments[2]:
// can be singleton: TRUE
// parent: Foo [@bool get Compose]
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Pluggable []
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: nested_module.FooChild 1
// config: stringField NestedFooChildField
// config: doubleField 0.55
// config: booleanField true
// config: nested_module.Foo 2
// config: integerField 124
// TYPE PATH:
//  nested_module.FooChild
//  nested_module.Foo
class $nested_module_FooChild extends nested_module.FooChild
    implements Pluggable {
  $nested_module_FooChild() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

// double doubleField
// c: double
  double get doubleField => 0.55;
// bool booleanField
// c: bool
  bool get booleanField => true;
// String className
// c: String
  String get className => "nested_module.FooChild";
// String stringField
// c: String
  String get stringField => "NestedFooChildField";
// int integerField
// c: int
  int get integerField => 124;
}

// **************************************************************************
// interceptor for [nested_module.FooChild2]
// type arguments[1]:
// type arguments[2]:
// can be singleton: FALSE
// parent: Foo [@bool get Compose]
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Pluggable []
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: nested_module.FooChild2 1
// config: stringField NestedFooChild2Field
// config: doubleField 0.55
// config: booleanField true
// config: nested_module.Foo 2
// config: integerField 124
// TYPE PATH:
//  nested_module.FooChild2
//  nested_module.Foo
class $nested_module_FooChild2 extends nested_module.FooChild2
    implements Pluggable {
  $nested_module_FooChild2(requiredString) {
//String
    this.requiredString = requiredString;
  }
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

// String requiredString
// c: String
// String className
// c: String
  String get className => "nested_module.FooChild2";
// String stringField
// c: String
  String get stringField => "NestedFooChild2Field";
// int integerField
// c: int
  int get integerField => 124;
}

// **************************************************************************
// interceptor for [foo2_module.Foo]
// type arguments[1]:
// type arguments[2]:
// can be singleton: TRUE
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: foo2_module.Foo 1
// config: stringField2 Foo2Field
// TYPE PATH:
//  foo2_module.Foo
class $foo2_module_Foo extends foo2_module.Foo implements Pluggable {
  $foo2_module_Foo() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

// String className
// c: String
  String get className => "foo2_module.Foo";
// String? stringField2
// c: String?
  String? get stringField2 => "Foo2Field";
}

// **************************************************************************
// interceptor for [bar_module.Bar]
// type arguments[1]:
// type arguments[2]:
// can be singleton: TRUE
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: bar_module.Bar 1
// config: stringField BarStringField
// TYPE PATH:
//  bar_module.Bar
class $bar_module_Bar extends bar_module.Bar implements Pluggable {
  $bar_module_Bar() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

// List<String> classNames
// c: List<String>
  List<String> get classNames => [];
// String stringField
// c: String
  String get stringField => "BarStringField";
}

// **************************************************************************
// interceptor for [bar_module.BarChild]
// type arguments[1]:
// type arguments[2]:
// can be singleton: TRUE
// parent: Bar [@bool get Compose]
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: bar_module.BarChild 1
// config: stringField BarChildStringField
// config: bar_module.Bar 2
// TYPE PATH:
//  bar_module.BarChild
//  bar_module.Bar
class $bar_module_BarChild extends bar_module.BarChild implements Pluggable {
  $bar_module_BarChild() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

// List<String> classNames
// c: List<String>
  List<String> get classNames => ['bar_module.BarChild'];
// String stringField
// c: String
  String get stringField => "BarChildStringField";
}

// **************************************************************************
// no interceptor for [generics_module.SimpleGeneric]
// type arguments[1]:
// T[77440244] => T[77440244]
// type arguments[2]:
// can be singleton: FALSE
// parameter: T 77440244
// argument: T 77440244
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Pluggable []
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: generics_module.SimpleGeneric 1
// TYPE PATH:
//  generics_module.SimpleGeneric
// **************************************************************************
// interceptor for [generics_module.Param]
// type arguments[1]:
// type arguments[2]:
// can be singleton: TRUE
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: generics_module.Param 1
// TYPE PATH:
//  generics_module.Param
class $generics_module_Param extends generics_module.Param
    implements Pluggable {
  $generics_module_Param() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }
}

// **************************************************************************
// interceptor for [generics_module.SimpleSpecific]
// type arguments[1]:
// T[77440244] => Param[69928645]
// type arguments[2]:
// can be singleton: TRUE
// parent: SimpleGeneric [@bool get Compose]
// parameter: T 77440244
// argument: Param 69928645
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Pluggable []
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: generics_module.SimpleSpecific 1
// config: generics_module.SimpleGeneric 2
// TYPE PATH:
//  generics_module.SimpleSpecific
//  generics_module.SimpleGeneric
class $generics_module_SimpleSpecific extends generics_module.SimpleSpecific
    implements Pluggable {
  $generics_module_SimpleSpecific() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }
}

// **************************************************************************
// no interceptor for [generics_module.ComplexGeneric]
// type arguments[1]:
// A[510373403] => A[510373403]
// B[9288068] => B[9288068]
// type arguments[2]:
// can be singleton: FALSE
// parameter: A 510373403
// parameter: B 9288068
// argument: A 510373403
// argument: B 9288068
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: generics_module.ComplexGeneric 1
// TYPE PATH:
//  generics_module.ComplexGeneric
// **************************************************************************
// no interceptor for [generics_module.SuperComplexGeneric]
// type arguments[1]:
// A[510373403] => Param[69928645]
// B[9288068] => A[251358803]
// A[251358803] => A[251358803]
// B[200962850] => B[200962850]
// type arguments[2]:
// can be singleton: FALSE
// parameter: A 251358803
// parameter: B 200962850
// argument: A 251358803
// argument: B 200962850
// parent: ComplexGeneric [@bool get Compose]
// parameter: A 510373403
// parameter: B 9288068
// argument: Param 69928645
// argument: A 251358803
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: generics_module.SuperComplexGeneric 1
// config: generics_module.ComplexGeneric 2
// TYPE PATH:
//  generics_module.SuperComplexGeneric
//  generics_module.ComplexGeneric
// **************************************************************************
// no interceptor for [Foo]
// type arguments[1]:
// type arguments[2]:
// can be singleton: FALSE
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: Foo 1
// TYPE PATH:
//  Foo
// **************************************************************************
// no interceptor for [RootClass]
// type arguments[1]:
// type arguments[2]:
// can be singleton: FALSE
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: RootClass 1
// TYPE PATH:
//  RootClass
// **************************************************************************
// no interceptor for [GenericRootClass]
// type arguments[1]:
// T[336000871] => T[336000871]
// type arguments[2]:
// can be singleton: FALSE
// parameter: T 336000871
// argument: T 336000871
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: GenericRootClass 1
// TYPE PATH:
//  GenericRootClass
// **************************************************************************
// no interceptor for [SpecificRootClass]
// type arguments[1]:
// T[336000871] => Foo[251274722]
// type arguments[2]:
// can be singleton: FALSE
// parent: GenericRootClass []
// parameter: T 336000871
// argument: Foo 251274722
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: SpecificRootClass 1
// config: GenericRootClass 2
// TYPE PATH:
//  SpecificRootClass
//  GenericRootClass
// **************************************************************************
// no interceptor for [Object]
// type arguments[1]:
// type arguments[2]:
// can be singleton: FALSE
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: Object 1
// TYPE PATH:
//  Object
// **************************************************************************
// no interceptor for [String]
// type arguments[1]:
// T[127185517] => String[259526404]
// type arguments[2]:
// can be singleton: FALSE
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Comparable []
// parameter: T 127185517
// argument: String 259526404
// parent: Pattern []
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: String 1
// TYPE PATH:
//  String
// **************************************************************************
// no interceptor for [List<String>]
// type arguments[1]:
// T[186874632] => E[66713824]
// E[423808491] => E[66713824]
// E[66713824] => String[259526404]
// type arguments[2]:
// ENCLOSING: XXX
// String[693143529]
// can be singleton: FALSE
// parameter: E 66713824
// argument: E 66713824
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: EfficientLengthIterable []
// parameter: T 186874632
// argument: E 66713824
// parent: Iterable []
// parameter: E 423808491
// argument: E 66713824
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: List 1
// TYPE PATH:
//  List
// **************************************************************************
// no interceptor for [T]
// type arguments[1]:
// type arguments[2]:
// **************************************************************************
// no interceptor for [List<T>]
// type arguments[1]:
// T[186874632] => E[66713824]
// E[423808491] => E[66713824]
// E[66713824] => T[342638001]
// type arguments[2]:
// ENCLOSING: NULL
// T[753925092]
// can be singleton: FALSE
// parameter: E 66713824
// argument: E 66713824
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: EfficientLengthIterable []
// parameter: T 186874632
// argument: E 66713824
// parent: Iterable []
// parameter: E 423808491
// argument: E 66713824
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: List 1
// TYPE PATH:
//  List
// **************************************************************************
// no interceptor for [dynamic]
// type arguments[1]:
// type arguments[2]:
// **************************************************************************
// no interceptor for [ST]
// type arguments[1]:
// type arguments[2]:
// **************************************************************************
// no interceptor for [int]
// type arguments[1]:
// T[127185517] => num[429855239]
// type arguments[2]:
// can be singleton: FALSE
// parent: num []
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Comparable []
// parameter: T 127185517
// argument: num 429855239
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: int 1
// config: num 2
// TYPE PATH:
//  int
//  num
// **************************************************************************
// no interceptor for [double]
// type arguments[1]:
// T[127185517] => num[429855239]
// type arguments[2]:
// can be singleton: FALSE
// parent: num []
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Comparable []
// parameter: T 127185517
// argument: num 429855239
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: double 1
// config: num 2
// TYPE PATH:
//  double
//  num
// **************************************************************************
// no interceptor for [bool]
// type arguments[1]:
// type arguments[2]:
// can be singleton: FALSE
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: bool 1
// TYPE PATH:
//  bool
// **************************************************************************
// no interceptor for [String?]
// type arguments[1]:
// T[127185517] => String[259526404]
// type arguments[2]:
// can be singleton: FALSE
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Comparable []
// parameter: T 127185517
// argument: String 259526404
// parent: Pattern []
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: String 1
// TYPE PATH:
//  String
// **************************************************************************
// no interceptor for [void]
// type arguments[1]:
// type arguments[2]:
// **************************************************************************
// interceptor for [generics_module.SimpleGeneric<generics_module.Param>]
// type arguments[1]:
// T[77440244] => Param[69928645]
// type arguments[2]:
// ENCLOSING: XXX
// Param[282794811]
// can be singleton: TRUE
// parameter: T 77440244
// argument: T 77440244
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Pluggable []
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: generics_module.SimpleGeneric 1
// TYPE PATH:
//  generics_module.SimpleGeneric
//parametrized type
class $generics_module_SimpleGeneric_generics_module_Param_
    extends generics_module.SimpleGeneric<generics_module.Param>
    implements Pluggable {
  $generics_module_SimpleGeneric() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }
}

// **************************************************************************
// no interceptor for [A]
// type arguments[1]:
// type arguments[2]:
// **************************************************************************
// no interceptor for [B]
// type arguments[1]:
// type arguments[2]:
// **************************************************************************
// no interceptor for [generics_module.ComplexGeneric<generics_module.Param,A>]
// type arguments[1]:
// A[510373403] => Param[69928645]
// B[9288068] => A[251358803]
// type arguments[2]:
// ENCLOSING: XXX
// Param[282794811]
// ENCLOSING: NULL
// A[166364324]
// can be singleton: FALSE
// parameter: A 510373403
// parameter: B 9288068
// argument: A 510373403
// argument: B 9288068
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: generics_module.ComplexGeneric 1
// TYPE PATH:
//  generics_module.ComplexGeneric
// **************************************************************************
// interceptor for [generics_module.SimpleGeneric<Foo>]
// type arguments[1]:
// T[77440244] => Foo[251274722]
// type arguments[2]:
// ENCLOSING: XXX
// Foo[50786325]
// can be singleton: TRUE
// parameter: T 77440244
// argument: T 77440244
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Pluggable []
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: generics_module.SimpleGeneric 1
// TYPE PATH:
//  generics_module.SimpleGeneric
//parametrized type
class $generics_module_SimpleGeneric_Foo_
    extends generics_module.SimpleGeneric<Foo> implements Pluggable {
  $generics_module_SimpleGeneric() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }
}

// **************************************************************************
// no interceptor for [generics_module.SimpleGeneric<T>]
// type arguments[1]:
// T[77440244] => T[336000871]
// type arguments[2]:
// ENCLOSING: NULL
// T[753925092]
// can be singleton: FALSE
// parameter: T 77440244
// argument: T 77440244
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Pluggable []
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: generics_module.SimpleGeneric 1
// TYPE PATH:
//  generics_module.SimpleGeneric
// **************************************************************************
// no interceptor for [GenericRootClass<Foo>]
// type arguments[1]:
// T[336000871] => Foo[251274722]
// type arguments[2]:
// ENCLOSING: XXX
// Foo[50786325]
// can be singleton: FALSE
// parameter: T 336000871
// argument: T 336000871
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: GenericRootClass 1
// TYPE PATH:
//  GenericRootClass
// **************************************************************************
// no interceptor for [SubtypesOf<T>]
// type arguments[1]:
// T[342638001] => T[342638001]
// type arguments[2]:
// ENCLOSING: NULL
// T[753925092]
// can be singleton: FALSE
// parameter: T 342638001
// argument: T 342638001
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: SubtypesOf 1
// TYPE PATH:
//  SubtypesOf
// **************************************************************************
// no interceptor for [TypePlugin<T>]
// type arguments[1]:
// T[290972494] => T[290972494]
// type arguments[2]:
// ENCLOSING: NULL
// T[753925092]
// can be singleton: FALSE
// parameter: T 290972494
// argument: T 290972494
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: TypePlugin 1
// TYPE PATH:
//  TypePlugin
// **************************************************************************
// no interceptor for [generics_module.ComplexGeneric<A,B>]
// type arguments[1]:
// A[510373403] => A[510373403]
// B[9288068] => B[9288068]
// type arguments[2]:
// ENCLOSING: NULL
// A[166364324]
// ENCLOSING: NULL
// B[669534805]
// can be singleton: FALSE
// parameter: A 510373403
// parameter: B 9288068
// argument: A 510373403
// argument: B 9288068
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: generics_module.ComplexGeneric 1
// TYPE PATH:
//  generics_module.ComplexGeneric
// **************************************************************************
// no interceptor for [generics_module.SuperComplexGeneric<A,B>]
// type arguments[1]:
// A[510373403] => Param[69928645]
// B[9288068] => A[251358803]
// A[251358803] => A[251358803]
// B[200962850] => B[200962850]
// type arguments[2]:
// ENCLOSING: NULL
// A[166364324]
// ENCLOSING: NULL
// B[669534805]
// can be singleton: FALSE
// parameter: A 251358803
// parameter: B 200962850
// argument: A 251358803
// argument: B 200962850
// parent: ComplexGeneric [@bool get Compose]
// parameter: A 510373403
// parameter: B 9288068
// argument: Param 69928645
// argument: A 251358803
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: generics_module.SuperComplexGeneric 1
// config: generics_module.ComplexGeneric 2
// TYPE PATH:
//  generics_module.SuperComplexGeneric
//  generics_module.ComplexGeneric
// **************************************************************************
// no interceptor for [GenericRootClass<T>]
// type arguments[1]:
// T[336000871] => T[336000871]
// type arguments[2]:
// ENCLOSING: NULL
// T[753925092]
// can be singleton: FALSE
// parameter: T 336000871
// argument: T 336000871
// parent: Object [@pragma pragma(String name, [Object? options])]
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: GenericRootClass 1
// TYPE PATH:
//  GenericRootClass
// **************************************************************************
// no interceptor for [num]
// type arguments[1]:
// T[127185517] => num[429855239]
// type arguments[2]:
// can be singleton: FALSE
// parent: Object [@pragma pragma(String name, [Object? options])]
// parent: Comparable []
// parameter: T 127185517
// argument: num 429855239
// CONFIG
// config: nested_module.Foo {stringField: NestedFooField, integerField: 124}
// config: nested_module.FooChild {stringField: NestedFooChildField, doubleField: 0.55, booleanField: true}
// config: nested_module.FooChild2 {stringField: NestedFooChild2Field, doubleField: 0.55, booleanField: true}
// config: foo2_module.Foo {stringField2: Foo2Field}
// config: bar_module.Bar {stringField: BarStringField}
// config: bar_module.BarChild {stringField: BarChildStringField}
// config: num 1
// TYPE PATH:
//  num
// **************************************************************************
class $ObjectManager {
  $nested_module_CombinedFoo? _nested_module_CombinedFoo;
  $nested_module_CombinedFoo get nested_module_CombinedFoo {
    if (_nested_module_CombinedFoo == null) {
      _nested_module_CombinedFoo = new $nested_module_CombinedFoo();
    }
    return _nested_module_CombinedFoo as $nested_module_CombinedFoo;
  }

  $nested_module_Foo? _nested_module_Foo;
  $nested_module_Foo get nested_module_Foo {
    if (_nested_module_Foo == null) {
      _nested_module_Foo = new $nested_module_Foo();
    }
    return _nested_module_Foo as $nested_module_Foo;
  }

  $nested_module_FooChild? _nested_module_FooChild;
  $nested_module_FooChild get nested_module_FooChild {
    if (_nested_module_FooChild == null) {
      _nested_module_FooChild = new $nested_module_FooChild();
    }
    return _nested_module_FooChild as $nested_module_FooChild;
  }

  $foo2_module_Foo? _foo2_module_Foo;
  $foo2_module_Foo get foo2_module_Foo {
    if (_foo2_module_Foo == null) {
      _foo2_module_Foo = new $foo2_module_Foo();
    }
    return _foo2_module_Foo as $foo2_module_Foo;
  }

  $bar_module_Bar? _bar_module_Bar;
  $bar_module_Bar get bar_module_Bar {
    if (_bar_module_Bar == null) {
      _bar_module_Bar = new $bar_module_Bar();
    }
    return _bar_module_Bar as $bar_module_Bar;
  }

  $bar_module_BarChild? _bar_module_BarChild;
  $bar_module_BarChild get bar_module_BarChild {
    if (_bar_module_BarChild == null) {
      _bar_module_BarChild = new $bar_module_BarChild();
    }
    return _bar_module_BarChild as $bar_module_BarChild;
  }

  $generics_module_Param? _generics_module_Param;
  $generics_module_Param get generics_module_Param {
    if (_generics_module_Param == null) {
      _generics_module_Param = new $generics_module_Param();
    }
    return _generics_module_Param as $generics_module_Param;
  }

  $generics_module_SimpleSpecific? _generics_module_SimpleSpecific;
  $generics_module_SimpleSpecific get generics_module_SimpleSpecific {
    if (_generics_module_SimpleSpecific == null) {
      _generics_module_SimpleSpecific = new $generics_module_SimpleSpecific();
    }
    return _generics_module_SimpleSpecific as $generics_module_SimpleSpecific;
  }

  $generics_module_SimpleGeneric_generics_module_Param_?
      _generics_module_SimpleGeneric_generics_module_Param_;
  $generics_module_SimpleGeneric_generics_module_Param_
      get generics_module_SimpleGeneric_generics_module_Param_ {
    if (_generics_module_SimpleGeneric_generics_module_Param_ == null) {
      _generics_module_SimpleGeneric_generics_module_Param_ =
          new $generics_module_SimpleGeneric_generics_module_Param_();
    }
    return _generics_module_SimpleGeneric_generics_module_Param_
        as $generics_module_SimpleGeneric_generics_module_Param_;
  }

  $generics_module_SimpleGeneric_Foo_? _generics_module_SimpleGeneric_Foo_;
  $generics_module_SimpleGeneric_Foo_ get generics_module_SimpleGeneric_Foo_ {
    if (_generics_module_SimpleGeneric_Foo_ == null) {
      _generics_module_SimpleGeneric_Foo_ =
          new $generics_module_SimpleGeneric_Foo_();
    }
    return _generics_module_SimpleGeneric_Foo_
        as $generics_module_SimpleGeneric_Foo_;
  }
}

$ObjectManager $om = new $ObjectManager();
//generated in 62ms
