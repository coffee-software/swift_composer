// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'factory.dart';

// **************************************************************************
// SwiftGenerator
// **************************************************************************

// **************************************************************************
// generated by swift_composer at 2025-01-04 13:49:26.217946
// ignore common warnings in generated code, you can also exclude this file in analysis_options.yaml
// ignore_for_file: unnecessary_non_null_assertion
// ignore_for_file: dead_null_aware_expression
// **************************************************************************
// CONFIG
// config file for module_test: test/lib/foo.di.yaml
// no config file for root: lib/swift_composer.di.yaml
// no config file for root: test/factory/factory.di.yaml
// **************************************************************************
// MERGED CONFIG
// module_test.Foo: {stringField: FooField, integerField: 124}
// module_test.FooChild: {stringField: FooChildField, doubleField: 0.55, booleanField: true}
// module_test.FooChild2: {stringField: FooChild2Field, doubleField: 0.55, booleanField: true}
// **************************************************************************
//register: SubtypeInfo
//register: SubtypesOf
//register: UnknownTypeException
//register: AnnotatedWith
//register: Pluggable
//register: TypePlugin
//register: module_test.Foo
//register: module_test.FooChild
//register: module_test.FooChild2
//register: Complex
//register: Container
// **************************************************************************
class $module_test_Foo extends module_test.Foo implements Pluggable {
  $module_test_Foo() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

  String get className => $om.s[0];
  String get stringField => "FooField";
  int get integerField => 124;
}

// **************************************************************************
class $module_test_FooChild extends module_test.FooChild implements Pluggable {
  $module_test_FooChild() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

  double get doubleField => 0.55;
  bool get booleanField => true;
  String get className => $om.s[1];
  String get stringField => "FooChildField";
  int get integerField => 124;
}

// **************************************************************************
class $module_test_FooChild2 extends module_test.FooChild2
    implements Pluggable {
  $module_test_FooChild2(requiredString) {
    this.requiredString = requiredString;
  }
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

  String get className => $om.s[2];
  String get stringField => "FooChild2Field";
  int get integerField => 124;
}

// **************************************************************************
class $Complex extends Complex implements Pluggable {
  $Complex(requiredString, requiredFoo) {
    this.requiredString = requiredString;
    this.requiredFoo = requiredFoo;
  }
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }
}

// **************************************************************************
class $Container extends Container implements Pluggable {
  $Container() {}
  T plugin<T>() {
    throw new Exception('no plugin for this type');
  }

//method createFoo override
  module_test.Foo createFoo() {
//module_test.Foo
    return new $module_test_Foo();
  }

//method createComplex override
  Complex createComplex(String requiredString, module_test.Foo requiredFoo) {
//Complex
    return new $Complex(requiredString, requiredFoo);
  }

//method createSubFoo override
  module_test.Foo createSubFoo(String className) {
    return $om.createSubtypeOfmodule_test_Foo1(className);
  }
}

// **************************************************************************
// **************************************************************************
// **************************************************************************
class $ObjectManager {
  $module_test_Foo? _module_test_Foo;
  $module_test_Foo get module_test_Foo {
    if (_module_test_Foo == null) {
      _module_test_Foo = new $module_test_Foo();
    }
    return _module_test_Foo as $module_test_Foo;
  }

  $module_test_FooChild? _module_test_FooChild;
  $module_test_FooChild get module_test_FooChild {
    if (_module_test_FooChild == null) {
      _module_test_FooChild = new $module_test_FooChild();
    }
    return _module_test_FooChild as $module_test_FooChild;
  }

  $Container? _container;
  $Container get container {
    if (_container == null) {
      _container = new $Container();
    }
    return _container as $Container;
  }

  module_test.Foo createSubtypeOfmodule_test_Foo1(String className) {
    if (className == $om.s[0]) return new $module_test_Foo();
    if (className == $om.s[1]) return new $module_test_FooChild();
    throw new UnknownTypeException(className);
  }

  final List<String> s = const [
    "module_test.Foo",
    "module_test.FooChild",
    "module_test.FooChild2"
  ];
}

$ObjectManager $om = new $ObjectManager();
// generated in 2ms
